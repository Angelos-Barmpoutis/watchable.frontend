@import "../../../../styles.scss";

.details-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: $spacing-sm;

    li {
        display: flex;
        gap: $spacing-md;
        font-size: $font-size-sm;
        border-bottom: 1px solid $surface-color;
        padding-bottom: $spacing-sm;

        &:last-child {
            border-bottom: none;
        }

        @media (max-width: map-get($breakpoints, "sm")) {
            font-size: $font-size-xs;
        }

        .detail-label {
            color: $text-secondary;
            font-weight: $font-weight-medium;
            width: 124px;
            flex-shrink: 0;
            display: flex;
            align-items: center;

            @media (max-width: map-get($breakpoints, "sm")) {
                width: 110px;
            }
        }

        .detail-value {
            color: $text-primary;

            .detail-link {
                color: rgba($primary-color, 0.8);
                text-decoration: none;
                transition: color $transition-normal;
                font-weight: $font-weight-medium;
                line-break: anywhere;

                &:hover {
                    color: rgba($primary-color, 1);
                }
            }

            .rating-badge {
                display: flex;
                align-items: baseline;
                gap: $spacing-xs;

                .rating-value {
                    font-size: $font-size-sm;
                    font-weight: $font-weight-bold;
                    line-height: 1;

                    &.rating-low {
                        color: rgba($error-color, 0.8);
                    }

                    &.rating-medium {
                        color: rgba($warning-color, 0.8);
                    }

                    &.rating-high {
                        color: rgba($success-color, 0.8);
                    }

                    &.rating-top {
                        color: rgba($primary-color, 0.8);
                    }
                }

                .rating-total {
                    font-size: $font-size-xs;
                    color: $text-secondary;
                }

                .vote-count {
                    font-size: $font-size-sm;
                    color: $text-secondary;
                    margin-left: $spacing-xs;

                    @media (max-width: map-get($breakpoints, "sm")) {
                        font-size: $font-size-xs;
                    }
                }
            }

            .rating-stars {
                display: flex;

                .star-button {
                    background: none;
                    border: none;
                    padding: 0;
                    cursor: pointer;
                    color: $text-secondary;
                    transition: all $transition-normal;
                    font-size: $font-size-lg;

                    & + .star-button {
                        padding-left: $spacing-xs;
                    }

                    &:hover {
                        color: $warning-color;
                        transform: scale(1.1);
                    }

                    &.active {
                        color: $warning-color;
                    }

                    i {
                        filter: drop-shadow(0 1px 1px rgba(0, 0, 0, 0.2));
                    }
                }

                &:hover {
                    .star-button {
                        color: $warning-color;
                    }
                }

                .star-button:hover ~ .star-button {
                    color: $text-secondary;
                }
            }
        }
    }
}

.skeleton-media-details {
    .skeleton-media-content {
        display: flex;
        flex-direction: column;
        gap: $spacing-xl;
    }

    .skeleton-media-list {
        display: flex;
        flex-direction: column;
        gap: $spacing-md;
    }

    .skeleton-media-item {
        display: flex;
        gap: $spacing-md;
    }

    .skeleton-media-label {
        @include skeleton-loading;
        height: $font-size-sm;
        width: 124px;
        border-radius: $border-radius-sm;

        @media (max-width: map-get($breakpoints, "sm")) {
            width: 110px;
            height: $font-size-xs;
        }
    }

    .skeleton-media-value {
        @include skeleton-loading;
        flex: 1;
        height: $font-size-sm;
        border-radius: $border-radius-sm;

        @media (max-width: map-get($breakpoints, "sm")) {
            height: $font-size-xs;
        }
    }
}
